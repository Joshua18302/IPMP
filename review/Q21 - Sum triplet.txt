
#include <stdio.h>  
#include <iostream>
#include <stdlib.h>
using namespace std;
#define MAX_VALUE 1000
struct node
{  
    int data;  
    struct node *next;  
};      

struct node *tail = NULL;  
   
void addNode(struct node** head, int data) 
{
    struct node *temp = (struct node*)malloc(sizeof(struct node));  
    temp->data = data;
    temp->next = NULL;
    if(*head == NULL) 
    {  
        *head = temp;  
        tail = temp;  
    }  
    else 
    {  
        tail->next = temp;  
        tail = temp;  
    }  
    
}  

void display(struct node* head) 
{  
    struct node *temp = head;  
      
    cout<<"Data in the linked list: ";  
    while(temp != NULL) 
    {  
        cout<<temp->data<<" ";  
        temp = temp->next;  
    }  
    cout<<"\n";  
    return;
}

int Min(int a, int b, int c)
{
    int m = (a<b)?((a<c)?1:3):(b<c)?2:3;
    return m;
}
void Sum(struct node* temp1, struct node* temp2, struct node* temp3, int x)
{
    int a = temp1->data;
    int b = temp2->data;
    int c = temp3->data;
    int sum ;
    while(temp1->next != NULL or temp2->next != NULL or temp3->next != NULL)
    {
        sum = temp1->data + temp2->data + temp3->data;
        
        if(sum > x)
            break;
            
        //cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<" sum: "<<sum<<"\n";
        if(sum == x)
        {
            cout<<"The three numbers that sum to "<<x<<" are: "<<temp1->data<<" "<<temp2->data<<" "<<temp3->data<<"\n";
            return;
        }
        
        if(temp1->next == NULL)
            a = MAX_VALUE;
            
        if(temp2->next == NULL)
            b = MAX_VALUE;
            
        if(temp3->next == NULL)
            c = MAX_VALUE;
            
        int number = Min(a, b, c);
        
        if(number == 1)
        {
            temp1 = temp1->next;
            a = temp1->data;
        }
        else if(number == 2)
        {
            temp2 = temp2->next;
            b = temp2->data;
        }
        else
        {
            temp3 = temp3->next;
            c = temp3->data;
        }
    }
    
    if(temp1->data + temp2->data + temp3->data != x)
        cout<<"There is no triplet that sums to "<<x<<"\n";
        
    else
        cout<<"The three numbers that sum to "<<x<<" are: "<<temp1->data<<" "<<temp2->data<<" "<<temp3->data<<"\n";
}

void Sort(struct node** head, struct node* end)
{
    struct node* previous_node = *head;
    struct node* current_node = *head;
    struct node* next_node = current_node->next;
    while(next_node!=end)
    {
        
        if(current_node->data > next_node->data)
        {
            current_node->next = next_node->next;
            next_node->next = current_node;
            
            if(current_node==*head)
            {
                *head = next_node;
                
                previous_node = next_node;
                next_node = current_node->next;
            }
            else
            {
                previous_node->next = next_node;
                
                previous_node = next_node;
                next_node = current_node->next;
            }
        }
        else
        {
            next_node = next_node->next;
            current_node = current_node->next;
            
            if(previous_node!=current_node)
                previous_node = previous_node->next;
        }
    }
    end = current_node;
    if(end != (*head)->next)
        Sort(&(*head), end);
}

int main()
{
    struct node *head1 = NULL;
    for(int i = 10; i>0; i--)
        addNode(&head1,i);
    
    struct node *head2 = NULL;
    for(int i = 10; i>0; i=i-2)
        addNode(&head2,i); 
        
    struct node *head3 = NULL;
    for(int i = 15; i>=0; i=i-3)
        addNode(&head3,i); 
        

    Sort(&head1, NULL);
    Sort(&head2, NULL);
    Sort(&head3, NULL);
    
    int x = 34;
    Sum(head1, head2, head3, x);
    return 0;
}
