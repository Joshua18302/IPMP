#include <iostream>
#include <stdlib.h>
#include <vector>
using namespace std;
struct node
{  
    int data;  
    node *next;  
};      

void addNode(struct node** head, struct node** tail, int data) 
{
    node *temp = (node*)malloc(sizeof(node));  
    temp->data = data;
    temp->next = NULL;
    if(*head == NULL) 
    {  
        *head = temp;  
        *tail = temp;  
    }  
    else 
    {  
        (*tail)->next = temp;  
        *tail = temp;  
    }
}  

void display(struct node* temp) 
{    
    cout<<"Data in the linked list: ";  
    while(temp != NULL) 
    {  
        cout<<temp->data<<" ";  
        temp = temp->next;  
    }  
    cout<<"\n";  
    return;
}

node* M_and_N(node* temp2, int m, int n)
{
    int count = 1;
    node* temp = NULL;
    vector<node*> v;
    while (temp2!=NULL)
    {
        if(count<=m)
        {
            count++;
            temp = temp2;
            v.push_back(temp2);
            temp2 = temp2->next;
            continue;
        }
        
        if(count<= m+n)
        {
            temp = temp2;
            temp2 = temp2->next;
            free(temp);
            count++;
            continue;
        }
        count = 1;
    }
    
    for(int i = 0; i<v.size()-1; i++)
    {
        v[i]->next = v[i+1];
    }
    v[v.size()-1]->next = NULL;
    return v[0];
}

int main()
{
    node *head = NULL;
    node *tail = NULL;
    for(int i = 0; i<10; i++)
        addNode(&head, &tail, i);
    
    int m = 1;
    int n = 2;
    
    head = M_and_N(head, m, n);
    display(head);
    return 0;
}