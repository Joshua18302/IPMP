#include <stdio.h>  
#include <iostream>
#include <stdlib.h>
using namespace std;
struct node
{  
    int data;  
    struct node *next;  
};      

struct node *tail = NULL;  
   
void addNode(struct node** head, int data) 
{
    struct node *temp = (struct node*)malloc(sizeof(struct node));  
    temp->data = data;
    temp->next = NULL;
    if(*head == NULL) 
    {  
        *head = temp;  
        tail = temp;  
    }  
    else 
    {  
        tail->next = temp;  
        tail = temp;  
    }  
    
}  

void connect(struct node* temp1, struct node* temp2)
{
    while(temp2->next!=NULL)
        temp2 = temp2->next;
        
    for(int i =0; i<8; i++)
        temp1 = temp1->next;
        
    temp2->next = temp1;
}

int length(struct node* temp)
{
    int count = 0;
    while(temp!=NULL)
    {
        count++;
        temp = temp->next;
    }
    return count;
}
void intersection(struct node* temp1, struct node* temp2, int len1, int len2)
{
    if(len1>len2)
    {
        for(int i = 0; i<len1-len2; i++)
            temp1 = temp1->next;
    }
    else if(len1<len2)
    {
        for(int i = 0; i<len2-len1; i++)
            temp2 = temp2->next;
    }
    while(temp1 != NULL && temp2 != NULL)
    {
        if(temp1->data == temp2->data)
        {
            cout<<"Intersection: "<<temp1->data;
            return;
        }
        temp1 = temp1->next;
        temp2 = temp2->next;
    }
    cout<<"No Intersection found";
}

int main()
{
    
    struct node *head1 = NULL;
    for(int i = 0; i<10; i++)
        addNode(&head1,i);
        
    struct node *head2 = NULL;
    for(int i = 20; i>=12; i=i-4)
        addNode(&head2,i);
    
    connect(head1, head2);
    int len1 = length(head1);
    int len2 = length(head2);
    intersection(head1,head2,len1,len2);
    
    return 0;
}
