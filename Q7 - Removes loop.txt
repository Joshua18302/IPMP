
#include <stdio.h>  
#include <iostream>
#include <stdlib.h>
using namespace std;
void addNode(struct node**, int);
void display(struct node*);
int Nth_node(struct node*, int);
struct node
{  
    int data;  
    struct node *next;  
};      

struct node *tail = NULL;  
   
void addNode(struct node** head, int data) 
{
    struct node *temp = (struct node*)malloc(sizeof(struct node));  
    temp->data = data;
    temp->next = NULL;
    if(*head == NULL) 
    {  
        *head = temp;  
        tail = temp;  
    }  
    else 
    {  
        tail->next = temp;  
        tail = temp;  
    }  
    
}  

int loop(struct node *head)
{
    struct node *a = head->next;
    while(a->next!=NULL)
    {
        struct node *b = head;
        while(b->next!=a)
        {
            if(a->next==b)
            {
                a->next == NULL;
                return 1; //returns 1 if the list contains a loop
            }
            b = b->next;
        }
        a=a->next;
    }
    return 0;//returns 0 if the list is NULL terminated
}
int main()
{
    struct node *head = NULL;
    for(int i = 0; i<10; i++)
        addNode(&head,i);
    
    head->next->next->next->next->next->next = head->next->next->next;
    int flag = loop(head);
    if(flag==1)
        cout<<"Contains a loop.";
    else
        cout<<"Does not contain a loop.";
    return 0;
}
