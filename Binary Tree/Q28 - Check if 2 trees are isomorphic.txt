#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    
    return temp;
}

bool Isomorphic(node* root1, node* root2)
{
    if (root1 == NULL && root2 == NULL)
        return true;
 
    if (root1 == NULL || root2 == NULL)
        return false;
     
    if (root1->data != root2->data)
        return false;
    
    //cout<<"Root1: "<<root1->data<<" Root2: "<<root2->data<<"\n";
    
    bool b1 = Isomorphic(root1->left, root2->left) and Isomorphic(root1->right, root2->right);
    
    bool b2 = Isomorphic(root1->left, root2->right) and Isomorphic(root1->right, root2->left);
    
    return b1 or b2;
}

int main()
{
    node* root1 = NULL;
    root1 = New_Node(1);
    root1->left = New_Node(2);
	root1->right = New_Node(3);
	root1->left->left = New_Node(4);
	root1->left->right = New_Node (5);
	root1->right->left = New_Node(6);
	root1->right->right = New_Node(7);
	
	node* root2 = NULL;
    root2 = New_Node(1);
    root2->left = New_Node(3);
	root2->right = New_Node(2);
	root2->left->left = New_Node(7);
	root2->left->right = New_Node (6);
	root2->right->left = New_Node(5);
	root2->right->right = New_Node(4);
    
    bool flag = Isomorphic(root1, root2);
    
    if(flag == 1)
        cout<<"Isomorphic.\n";
    
    else
        cout<<"Not isomorphic.\n";
    return 0;
}