#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

int Value(node* root)
{
    if(root == NULL)
        return 0;
    
    else
        return root->data;
}

bool Children_Sum(node* root)
{ 
    if(root == NULL or root->left == NULL and root->right == NULL)
        return true;
        
    bool b1 = Children_Sum(root->left);
    bool b2 = Children_Sum(root->right);
        
    if(b1 and b2)
        if(root->data == Value(root->left)+Value(root->right))
            return true;
        else
            return false;
    else
        return false;
    
    return 0;
}

int main()
{
    node* root = New_Node(10);
    root->left = New_Node(4);
	root->right = New_Node(6);
	root->left->left = New_Node(3);
	root->left->right = New_Node (1);
	root->right->left = New_Node(6);
	//root->right->right = New_Node(5);

	if(root==NULL or Children_Sum(root))
	    cout<<"Given tree satisfies the children sum property.";
    else
        cout<<"Given tree does not satisfy the children sum property.";
    return 0;
}