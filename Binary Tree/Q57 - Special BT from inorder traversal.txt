#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

void Preorder(node* root)
{
    if(root == NULL)
        return;
    
    cout<<root->data<<" ";
    Preorder(root->left);
    Preorder(root->right);
}

int Find_Max(int arr[], int low, int high)
{
    int max = 0;
    int k = -1;
    for(int i = low; i<=high; i++)
    {
        if(arr[i]>max)
        {
            max = arr[i];
            k = i;
        }
    }
    
    return k;
}

node* Construct_Tree(int arr[], int low, int high)
{
     
    if(low > high)
        return NULL;
    
    if(low == high)
        return New_Node(arr[low]);
        
        
    int index = Find_Max(arr, low, high);
    int data = arr[index];
    
    node* root = New_Node(data);
    
    root->left = Construct_Tree(arr, low, index-1);
    root->right = Construct_Tree(arr, index+1, high);
    
    return root;
}

int main()
{
    int n = 8;
    int arr[] = {1, 5, 10, 40, 30, 15, 28, 20};
    
	node* root = Construct_Tree(arr, 0, n-1);
	Preorder(root);
	
    return 0;
}