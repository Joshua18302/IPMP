#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

bool Foldable(node* left, node* right)
{
    if(left == NULL and right == NULL)
        return true;
    
    if((left==NULL and right!=NULL) or (left!=NULL and right==NULL))
        return false;
      
    bool b1 = Foldable(left->left, right->right);
    bool b2 = Foldable(left->right, right->left);
    
    return b1 and b2;
    
}

int main()
{
    node* root = New_Node(1);
    root->left = New_Node(2);
	root->right = New_Node(3);
	root->left->left = New_Node(4);
	root->left->right = New_Node (5);
	root->right->left = New_Node(6);
	root->right->right = New_Node(7);
	
	
	if(root == NULL or Foldable(root->left, root->right))
	    cout<<"Given tree is foldable.";
    else
        cout<<"Given tree is not foldable.";
    return 0;
}