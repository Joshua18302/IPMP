#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    
    return temp;
}

node* Insert(node* root, int i)
{
    if(root == NULL)
        return New_Node(i);
    
    if(i < root->data)
        root->left = Insert(root->left, i);
        
    else
        root->right = Insert(root->right, i);
    
    return root;
}

node* findLCA(node* root, int n1, int n2)
{
    if (root == NULL) 
        return NULL;
 
    if (root->data == n1 || root->data == n2)
        return root;
 
    node *left_lca  = findLCA(root->left, n1, n2);
    node *right_lca = findLCA(root->right, n1, n2);
 
    
    if (left_lca != NULL and right_lca != NULL)  
        return root;
 
 
    return (left_lca != NULL)? left_lca: right_lca;
}

int main()
{
    node* root = NULL;
    root = New_Node(1);
    root->left = New_Node(2);
	root->right = New_Node(3);
	root->left->left = New_Node(4);
	root->left->right = New_Node (5);
	root->right->left = New_Node(6);
	root->right->right = New_Node(7);
	
	cout<<findLCA(root,2,5)->data;
    
    return 0;
}
