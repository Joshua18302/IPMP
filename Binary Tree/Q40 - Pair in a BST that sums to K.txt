#include <iostream>
#include <vector>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    
    return temp;
}

node* Insert(node* root, int i)
{
    if(root == NULL)
        return New_Node(i);
    
    if(i < root->data)
        root->left = Insert(root->left, i);
        
    else
        root->right = Insert(root->right, i);
    
    return root;
}

void Inorder(node* root, vector<int> *v)
{
    if(root == NULL)
        return;
    
    Inorder(root->left, v);
    (*v).push_back(root->data);
    Inorder(root->right, v);
    
}

int main()
{
    node* root = NULL;
    root = Insert(root, 4);
	root = Insert(root, 2);
	root = Insert(root, 1);
	root = Insert(root, 3);
	root = Insert(root, 6);
	root = Insert(root, 5);
	root = Insert(root, 7);
	
	int k = 9;
	
	vector<int>v;
	Inorder(root, &v);
	
	int left = 0; 
	int right = v.size() -1;
	while(left<right)
	{
	    if(v[left] + v[right] < k)
            left++;
            
        else if(v[left] + v[right] > k)
            right--;
        
        else
        {
            cout<<v[left]<<" + "<<v[right]<<" = "<<k<<"\n";
            left++;
        }
	}
    return 0;
}