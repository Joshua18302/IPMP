#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

int Height(node* root, int* flag)
{
    if(root == NULL or *flag == 0)
        return 0;
        
    int left_height = Height(root->left, flag);
    int right_height = Height(root->right, flag);
    
    if(abs(left_height - right_height) >1 or *flag == 0)
    {
        *flag = 0;
        return 0;;
    }
    else
    {
        if(left_height > right_height)
            return left_height+1;
        else
            return right_height+1;
    }       
}

int main()
{
    node* root = NULL;
    root = New_Node(1);
    root->left = New_Node(2);
	//root->right = New_Node(3);
	root->left->left = New_Node(4);
	
	int flag = 1;
    int x = Height(root, &flag);
    
    if(flag)
	    cout<<"Given tree is height balanced.";
    else
        cout<<"Given tree is not height balanced.";
    return 0;
}