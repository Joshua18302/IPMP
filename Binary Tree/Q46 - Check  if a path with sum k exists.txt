#include <iostream>
using namespace std;

struct node
{
    int data;
    node* left;
    node* right;;
};

node* New_Node(int data)
{
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

bool Leaf_Path_Sum(node* root, int sum, int k)
{
    if(root == NULL)
        return false;
    
    sum = sum+root->data;
    
    if(root->left == NULL and root->right == NULL)
    {
        if(sum == k)
            return true;
        else 
            return false;
    }    
    
    return Leaf_Path_Sum(root->left, sum, k) or 
        Leaf_Path_Sum(root->right, sum, k);
}

int main()
{
    node* root = New_Node(1);
    root->left = New_Node(2);
	root->right = New_Node(3);
	root->left->left = New_Node(4);
	root->left->right = New_Node (5);
	root->right->left = New_Node(6);
	root->right->right = New_Node(7);
	
	int k = 11;
	if(Leaf_Path_Sum(root, 0, k))
	    cout<<"Path with sum "<<k<<" exists.";
    else
        cout<<"Path with sum "<<k<<" does not exist.";
        
    return 0;
}