#include <stdio.h>  
#include <iostream>
#include <stdlib.h>
using namespace std;
struct node
{  
    char data;  
    struct node *next;  
    struct node *prev; 
};      

int Push(struct node** top, char data) 
{
    if(data == ']' or data == '}' or  data == ')' )
    {
        if(*top == NULL)
            return 0;
        
        if((data == ')' and (*top)->data == '(') or (data == '}' and (*top)->data == '{') or (data == ']' 
        and (*top)->data == '['))
        {
            
            struct node *a = (*top)->prev;
            free(*top);
            if(a != NULL)
                a->next = NULL;
            *top = a;
            return 1;
        }
        else{
            return 0;
        }
    }
    struct node *temp = (struct node*)malloc(sizeof(struct node));  
    temp->data = data;
    temp->next = NULL;
    temp->prev = *top;
    if(*top != NULL) 
        (*top)->next = temp;
    
    *top = temp;
    return 1;
}  

int main()
{
    struct node *top = NULL;
    char str[] = "{[{)}]}";
    
    int flag = 1;
    
    for(int i = 0; i<10; i++)
    {
        flag = Push(&top, str[i]);
        if(flag == 0)
        {
            cout<<"Not balanced.\n";
            break;
        }
    }
    
    if(flag == 1)
        cout<<"Balanced.\n";
    return 0;
}