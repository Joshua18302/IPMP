#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <utility>
using namespace std;

pair<int,int> Binary_Search(int arr[], int n, int key, int left, int right)
{
    pair<int,int> p;
    int floor_index = -1;
    int ceil_index =n;
    //int left = 0;
    //int right = n-1;
    int mid;
    while(left<=right)
    {
        mid = (left+right)/2;
        
        if(key > arr[mid])
        {
            floor_index = mid;
            left = mid+1;
        }
        else if(key < arr[mid])
        {
            ceil_index = mid;
            right = mid-1;
        }
    }
    return make_pair(floor_index,ceil_index);
}

int main()
{
    int arr[] = {10, 12, 20, 30, 25, 40, 32, 31, 35, 36, 37};
    int n = sizeof(arr)/sizeof(arr[0]);
    pair<int,int> p;
    /*for(int i = 0; i<n; i++)
        cout<<arr[i]<<" ";
    cout<<"\n";*/
    
    int low;
    for(int i = 0; i<n-1; i++)
        if(arr[i]>arr[i+1])
        {
            low = i;
            break;
        }
    
    int high;
    for(int i = n-1; i>0; i--)
        if(arr[i-1]>arr[i])
        {
            high = i;
            break;
        }
    int min = *(min_element(arr+low,arr+high));
    int max = *(max_element(arr+low,arr+high));
    p = Binary_Search(arr,n,min, 0 , low);
    low = p.first +1;
    p = Binary_Search(arr,n,max, high , n-1);
    high = p.second -1;
    
    cout<<"Unosrted subarray is from "<<low<<" to "<<high<<".\n";

    return 0;
}