#include <iostream>
using namespace std;

int max(int a,int b,int c)
{
    int m1 = (a>b)?a:b;
    return (m1>c)?m1:c;
}

int Middlemax(int arr[], int left, int right, int mid)
{
    
    int leftsum = -10000;
    int sum = 0;
    for(int i = mid; i>=left; i--)
    {
        sum+=arr[i];
        if(sum>leftsum)
            leftsum = sum;
    }
    
    int rightsum = -10000;
    sum = 0;
    for(int i = mid+1; i<=right; i++)
    {
        sum+=arr[i];
        if(sum>rightsum)
            rightsum = sum;
    }
    return max(leftsum+rightsum, leftsum, rightsum);
}

int Maximal_Subarray(int arr[], int left, int right)
{
    if(left>=right)
        return arr[left];
    
    int mid = (left+right)/2;
    
    return max(Maximal_Subarray(arr, left, mid), Maximal_Subarray(arr,mid+1, right), Middlemax(arr,left,right,mid));
}

int main()
{
    int arr[] = {-2, -5, 6, -2, -3, 1, 5, -6};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout<<Maximal_Subarray(arr, 0, n - 1);

    return 0;
}
